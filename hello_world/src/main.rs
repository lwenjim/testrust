fn fn_once<F>(func: F)
where
    F: FnOnce(usize) -> bool + Copy,
{
    println!("{}", func(3));
    println!("{}", func(4));
}
fn main() {
    // 闭包是一种匿名函数, 它可以赋值给变量也可以作为参数传递给其他函数, 不同于函数的是, 它捕获调用者作用域中的值
    // 闭包的类型推到
    // 闭包对内存的影响
    // 当闭包从环境中捕获一个值时, 会分配内存去存储这些值, 对于有些场景来说, 这种额外的内存分配会成为一种负担,
    // 与之相比, 函数就不会去捕获这些变量的值, 因此定义和使用函数不会拥有这种负担.

    //
    // 获取变量不可变借用
    // Fn
    // 获取变量可变借用
    // FnMut
    // 获得变量所有权
    // FnOnce

    let x = [1, 2, 3];
    fn_once(|z| z == x.len())
}
